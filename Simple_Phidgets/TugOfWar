package Simple_Phidgets;

// Add Phidgets Library | You added a file called phidget22 when configuring your project. Import gives you access to the Phidgets library code inside that file. 
import com.phidget22.*;

public class TugOfWar {
    
    public static void main(String[] args) throws Exception {

        // Create 
        DigitalInput redButton = new DigitalInput();
        DigitalOutput redLED = new DigitalOutput();
        DigitalInput greenButton = new DigitalInput();
        DigitalOutput greenLED = new DigitalOutput();

        // Address 
        redButton.setHubPort(0);
        redButton.setIsHubPortDevice(true);
        redLED.setHubPort(1);
        redLED.setIsHubPortDevice(true);
        greenButton.setHubPort(5);
        greenButton.setIsHubPortDevice(true);
        greenLED.setHubPort(4);
        greenLED.setIsHubPortDevice(true);

        // Open 
        redButton.open(1000);
        redLED.open(1000);
        greenButton.open(1000);
        greenLED.open(1000);

        // Initialize counter
        int redButtonPressCount = 0;
        int greenButtonPressCount = 0;

        
        boolean lastRedButtonState = false;
        boolean lastGreenButtonState = false;

        while (true) {
            // Check the state of the red button
            if (redButton.getState()) {
                redLED.setState(true);
                // Increment count if the button was not previously pressed
                if (!lastRedButtonState) {
                    redButtonPressCount++;
                }
            } else {
                redLED.setState(false);
            }
            lastRedButtonState = redButton.getState();

            // Check the state of the green button
            if (greenButton.getState()) {
                greenLED.setState(true);
                // Increment count if the button was not previously pressed
                if (!lastGreenButtonState) {
                    greenButtonPressCount++;
                }
            } else {
                greenLED.setState(false);
            }
            lastGreenButtonState = greenButton.getState();

            // Check for a winner
            if (redButtonPressCount >= 10) {
                announceWinner(redLED, greenLED);
                break; // Exit the loop after announcing the winner
            } else if (greenButtonPressCount >= 10) {
                announceWinner(greenLED, redLED);
                break; // Exit the loop after announcing the winner
            }

            Thread.sleep(150);
        }
    }

    // Method to announce the winner by lighting up the LEDs
    private static void announceWinner(DigitalOutput WinnerLED, DigitalOutput LoserLED) throws Exception {
        // Flash both LEDs once
        WinnerLED.setState(true);
        LoserLED.setState(true);
        Thread.sleep(500); 
        WinnerLED.setState(false);
        LoserLED.setState(false);
        Thread.sleep(500); 

        // Flash the winner's LED 5 times
        for (int i = 0; i < 5; i++) {
        	WinnerLED.setState(true);
            Thread.sleep(300); 
            WinnerLED.setState(false);
            Thread.sleep(300); 
        }
    }
}
